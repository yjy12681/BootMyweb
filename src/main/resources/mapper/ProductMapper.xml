<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.coding404.myweb.product.service.ProductMapper">
  	
  	<insert id="productRegist" parameterType="com.coding404.myweb.command.ProductVO">
  		insert into product(prod_enddate,
  							prod_writer,
  							prod_name,
  							prod_price,
  							prod_count,
  							prod_discount,
  							prod_purchase_yn,
  							prod_content,
  							prod_comment,
  							prod_category
  							)
  		values(#{prod_enddate},
  			   #{prod_writer},
  			   #{prod_name},
  			   #{prod_price},
  			   #{prod_count},
  			   #{prod_discount},
  			   #{prod_purchase_yn},
  			   #{prod_content},
  			   #{prod_comment},
  			   #{prod_category}
  			  )
  	</insert>
  	
  	<insert id="productFileRegist">
  		<!-- selectKey는 insert, update, delete 필요한 키값을 조회해서 가져오는 기능 
  		
  			selectKey절 안에는 select문장을 적는데, 반드시 단일행이 나와야 합니다.
  			insert를 하기 전에 실행 or insert를 한 후에 실행
  			order="BEFOR"  order="AFTER"
  			
  			keyProperty = vo객체 전달, select한 결과를 맵핑할 setter메서드명
  			
  			resultType = select한 결과에 대한 반환타입
  		-->
  		<selectKey order="BEFORE" keyProperty="prod_id" resultType="int">
  			select max(prod_id) as prod_id from product where prod_writer = #{prod_writer}
  		</selectKey>
  	
  		insert into product_upload(
  									filename, filepath, uuid, prod_id, prod_writer 
  									) values 
  								  (
  									#{filename}, #{filepath}, #{uuid}, #{prod_id}, #{prod_writer}
  								  )
  	</insert>
  	
  	<!-- 
  		동적쿼리 if, choose, foreach문장 
  		동적쿼리절에는 vo의 getter or map key가 전달됨
  	-->
  	<select id="getList" resultType="com.coding404.myweb.command.ProductVO">
  		select *
  		from product a
  		left join (SELECT CONCAT(A1.group_ID, A1.CATEGORY_ID) AS CATEGORY_KEY, ##카테고리 키 (그룹 + 키 형태로 카테고리분류)
						   CASE A1.category_parent_LV
								WHEN 0 THEN A1.category_detail_NM
								WHEN 1 THEN CONCAT(A2.category_detail_NM,' > ', A1.category_detail_NM)
								WHEN 2 THEN CONCAT(A3.category_detail_NM, ' > ', A2.category_detail_NM,' > ', A1.category_detail_NM)
						   END as CATEGORY_NAV
					FROM product_category A1
					LEFT OUTER JOIN product_category A2
					ON A1.CATEGORY_PARENT_LV = A2.CATEGORY_LV AND A1.CATEGORY_DETAIL_PARENT_LV = A2.CATEGORY_DETAIL_LV AND A1.GROUP_ID = A2.GROUP_ID
					LEFT OUTER JOIN product_category A3
					ON A2.CATEGORY_PARENT_LV = A3.CATEGORY_LV AND A2.CATEGORY_DETAIL_PARENT_LV = A3.CATEGORY_DETAIL_LV
					ORDER BY CATEGORY_NAV ASC
  				   ) b
  		on a.prod_category = b.category_key 
  		where prod_writer = #{writer}
  		
  		<if test="cri.searchName != '' and cri.searchName != null ">
  		and prod_name like concat('%', #{cri.searchName}, '%')
  		</if>
  		<if test="cri.searchContent != '' and cri.searchContent != null ">
		and prod_content like concat('%', #{cri.searchContent}, '%')
		</if>
		<if test="cri.startDate != '' and cri.startDate != null ">
		<![CDATA[ and prod_enddate >= #{cri.startDate} ]]>
		</if>
		<if test="cri.endDate != '' and cri.endDate != null ">
		<![CDATA[ and prod_enddate <= #{cri.endDate} ]]>
		</if>
  		<!-- 
  		<choose>
  		  	<when test=""></when>
  		  	<when test=""></when>
  		  	<when test=""></when>
  		  	<otherwise></otherwise>
  		</choose>
  		 -->
  		
  		order by 
  		<if test="cri.searchPrice == 'asc' ">
  			prod_price asc, 
  		</if>
  		<if test="cri.searchPrice == 'desc' ">
  			prod_price desc,
  		</if>
  		prod_id desc
  		limit #{cri.pageStart}, #{cri.amount}
  	</select>
  	
  	<select id="getTotal" resultType="int">
  		select count(*) as total 
  		from product
  		where prod_writer = #{writer}
  		
  		<if test="cri.searchName != '' and cri.searchName != null ">
  		and prod_name like concat('%', #{cri.searchName}, '%')
  		</if>
  		<if test="cri.searchContent != '' and cri.searchContent != null ">
		and prod_content like concat('%', #{cri.searchContent}, '%')
		</if>
		<if test="cri.startDate != '' and cri.startDate != null ">
		<![CDATA[ and prod_enddate >= #{cri.startDate} ]]>
		</if>
		<if test="cri.endDate != '' and cri.endDate != null ">
		<![CDATA[ and prod_enddate <= #{cri.endDate} ]]>
		</if>
  	</select>
  	
  	
  	
  	
  	<select id="getDetail" resultType="com.coding404.myweb.command.ProductVO">
  		select * from product a
  		left join (SELECT CONCAT(A1.group_ID, A1.CATEGORY_ID) AS CATEGORY_KEY, ##카테고리 키 (그룹 + 키 형태로 카테고리분류)
						   CASE A1.category_parent_LV
								WHEN 0 THEN A1.category_detail_NM
								WHEN 1 THEN CONCAT(A2.category_detail_NM,' > ', A1.category_detail_NM)
								WHEN 2 THEN CONCAT(A3.category_detail_NM, ' > ', A2.category_detail_NM,' > ', A1.category_detail_NM)
						   END as CATEGORY_NAV
					FROM product_category A1
					LEFT OUTER JOIN product_category A2
					ON A1.CATEGORY_PARENT_LV = A2.CATEGORY_LV AND A1.CATEGORY_DETAIL_PARENT_LV = A2.CATEGORY_DETAIL_LV AND A1.GROUP_ID = A2.GROUP_ID
					LEFT OUTER JOIN product_category A3
					ON A2.CATEGORY_PARENT_LV = A3.CATEGORY_LV AND A2.CATEGORY_DETAIL_PARENT_LV = A3.CATEGORY_DETAIL_LV
					ORDER BY CATEGORY_NAV ASC
  				   ) b
  		on a.prod_category = b.category_key
  		where prod_id = #{prod_id}
  	</select>
  	
	<update id="productUpdate">
		update product 
		set prod_enddate = #{prod_enddate}, 
			prod_name = #{prod_name},
			prod_price = #{prod_price},
			prod_count = #{prod_count},
			prod_discount = #{prod_discount},
			prod_purchase_yn = #{prod_purchase_yn},
			prod_content = #{prod_content},
			prod_comment = #{prod_comment}
		where prod_id = #{prod_id} and prod_writer = #{prod_writer}
	</update>
  	
  	
  	<delete id="productDelete">
  		delete from product where prod_id = #{prod_id}
  	</delete>
  	
  	<!-- 카테고리처리 -->
  	<select id="getCategory" resultType="com.coding404.myweb.command.CategoryVO">
  		select *
  		from product_category 
  		where category_lv = 1
  	</select>
  	
  	<select id="getCategoryChild" resultType="com.coding404.myweb.command.CategoryVO">
  		select *
  		from product_category
  		where group_id = #{group_id} 
  		and category_parent_lv = #{category_lv}
  		and category_detail_parent_lv = #{category_detail_lv}
  	</select>
  	
  	<!-- 이미지데이터 가져오기 -->
  	<select id="getAjaxImg" resultType="com.coding404.myweb.command.ProductUploadVO">
  		select * from product_upload where prod_id = #{prod_id}
  	</select>
  	
  	
  	
  	
  	
  </mapper>
  
  
  
  